import * as React from 'react';
import * as ReactDOM from 'react-dom';  // ‚úÖ –Ø–≤–Ω—ã–π –∏–º–ø–æ—Ä—Ç ReactDOM
import { AbstractView } from 'sabre-ngv-app/app/AbstractView';
import { AbstractModel } from 'sabre-ngv-app/app/AbstractModel';
import { FlightSegment } from 'sabre-ngv-app/app/common/data/flight/FlightSegment';
import SeatMapComponentShopping from '../SeatMapComponentShopping';
import { quicketConfig } from '../quicketConfig'; // config —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç—ã
import { CssClass } from 'sabre-ngv-core/decorators/classes/view/CssClass';
import { Template } from 'sabre-ngv-core/decorators/classes/view/Template';

@CssClass('com-sabre-redapp-example3-web-customworkflow-web-module')
@Template('com-sabre-redapp-example3-web-customworkflow-web-module:ShoppingTileView')
export class SeatMapShoppingView extends AbstractView<AbstractModel> {

    private flightSegments: any[] = [];
    private selectedSegmentIndex: number = 0;

    selfDrawerContextModelPropagated(cpa: FlightSegment): void {
        console.log('üìå [SeatMapShoppingView] selfDrawerContextModelPropagated called with cpa:', cpa);

        // // üî® –•–∞—Ä–¥–∫–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        // const flightData = {
        //     airlineCode: 'LH',
        //     flightNo: '123',
        //     departureDate: '2025-04-22',
        //     departure: 'MUC',
        //     arrival: 'FRA'
        // };
        // console.log('üìå [SeatMapShoppingView] Hardcoded flight data:', flightData);
        // this.flightSegments = [flightData];
        // this.selectedSegmentIndex = 0;

        const segments = cpa.getShoppingItinerary().getFlightSegments();
        this.flightSegments = segments.map(segment => {
            const departureDateTime = segment.getDepartureDate();
    
            return {
                id: '001',
                segmentId: segment.getSegmentId(),
                flightNumber: segment.getFlightNumber(),
                origin: segment.getOriginIata(),
                destination: segment.getDestinationIata(),
                airMiles: segment.getAirMiles(),
                departureDateTime: departureDateTime ? departureDateTime.toISOString().split('T')[0] : 'UNKNOWN', // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞—Ç—ã
                marketingAirline: segment.getMarketingAirline(),
                cabinClass: 'Economy' // –ü—Ä–∏–º–µ—Ä, –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            };
        });

        // –ü—Ä–æ–±—É–µ–º —Ä–µ–Ω–¥–µ—Ä–∏—Ç—å React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π, —á—Ç–æ–±—ã –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞
        this.tryRenderReactComponent();
    }

    tryRenderReactComponent(attempts = 0) {
        const MAX_ATTEMPTS = 10;
        const INTERVAL = 500; // –ò–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –ø–æ–ø—ã—Ç–∫–∞–º–∏ (–≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö)

        const rootElement = document.getElementById('seatmap-root');

        if (rootElement) {
            console.log('‚úÖ [SeatMapShoppingView] –≠–ª–µ–º–µ–Ω—Ç seatmap-root –Ω–∞–π–¥–µ–Ω. –ù–∞—á–∏–Ω–∞–µ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.');
            this.renderReactComponent();
        } else if (attempts < MAX_ATTEMPTS) {
            console.warn(`‚ö†Ô∏è [SeatMapShoppingView] –≠–ª–µ–º–µ–Ω—Ç seatmap-root –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ ${INTERVAL} –º—Å. –ü–æ–ø—ã—Ç–∫–∞ ${attempts + 1}/${MAX_ATTEMPTS}`);
            setTimeout(() => this.tryRenderReactComponent(attempts + 1), INTERVAL);
        } else {
            console.error('‚ùå [SeatMapShoppingView] –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç seatmap-root –ø–æ—Å–ª–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —á–∏—Å–ª–∞ –ø–æ–ø—ã—Ç–æ–∫.');
        }
    }

    renderReactComponent() {
        const rootElement = document.getElementById('seatmap-root');
    
        if (rootElement) {
            // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–Ω–¥–µ—Ä –ø–µ—Ä–µ–¥ —Ç–µ–º, –∫–∞–∫ —Å–Ω–æ–≤–∞ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–∏—Ç—å React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
            ReactDOM.unmountComponentAtNode(rootElement);
    
            const data = {
                flightSegments: this.flightSegments,
                selectedSegmentIndex: this.selectedSegmentIndex
            };
    
            ReactDOM.render(
                React.createElement(SeatMapComponentShopping, { config: quicketConfig, data }),
                rootElement
            );
    
            console.log('üìå [SeatMapShoppingView] React Component —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω –≤ #seatmap-root.');
        } else {
            console.error('‚ùå [SeatMapShoppingView] –≠–ª–µ–º–µ–Ω—Ç —Å id="seatmap-root" –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞.');
        }
    }
}